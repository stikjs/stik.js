if(window.stik)throw"Stik is already loaded. Check your requires ;)";window.stik={},window.stik.injectable=function(n){function t(t){function e(){}var o,r;return e.prototype=n.module.prototype,o=new e,r=i(o,t),Object(r)===r?r:o}function e(t){var e=window.stik.injector({executionUnit:n.module,modules:t});return e.resolveDependencies()}function i(t,e){var i=n.module.apply(t,e);return o(i),i}function o(t){n.cache===!0&&(n.cachedValue=t)}return n.instantiable=n.instantiable||!1,n.resolvable=n.resolvable||!1,n.cache=n.cache||!1,n.resolve=function(o){return n.cachedValue?n.cachedValue:n.instantiable===!0?t(e(o)):n.resolvable===!0?i({},e(o)):n.module},n},window.stik.createController=function(n){if(!n.name)throw"Stik: Controller needs a name";return n.actions={},n.action=function(t,e){var i=window.stik.action({name:t,controller:n.name,executionUnit:e});return n.actions[t]=i,i},n.bind=function(t){var e,i=!1;for(e in n.actions)n.actions[e].bind(t)&&(i=!0);return i},n},window.stik.action=function(n){function t(t){return{context:window.stik.context({controller:n.controller,action:n.name,template:t}),executionUnit:n.executionUnit}}function e(n){n.className=(n.className+" stik-bound").trim()}if(!n.controller)throw"Stik: Action needs an controller name";if(!n.name)throw"Stik: Action name can't be empty";if(!n.executionUnit)throw"Stik: Action needs a function to use as its execution unit";return n.bind=function(i){for(var o=n.findTemplates(),r=o.length;r--;)t(o[r]).context.load(n.executionUnit,i),e(o[r]);return o.length>0},n.findTemplates=function(t){var e=document;t&&(e=t);var i="[data-controller="+n.controller+"][data-action="+n.name+"]:not([class*=stik-bound])";return e.querySelectorAll(i)},n.bindWithTemplate=t,n},window.stik.context=function(n){function t(n,t){var e=window.stik.injector({executionUnit:n,modules:t});return e.resolveDependencies()}function e(t){return t.$template=n.template,t}return n.template=window.stik.injectable({module:n.template}),n.load=function(i,o){var r=t(i,e(o));i.apply(n,r)},n},window.stik.createBehavior=function(n){function t(t){return{context:window.stik.context({behavior:n.behavior,template:t}),executionUnit:n.executionUnit}}function e(){var t="[class*="+n.name+"]:not([data-behaviors*="+n.name+"])";return document.querySelectorAll(t)}function i(t){var e=t.getAttribute(r);e=((e||"")+" "+n.name).trim(),t.setAttribute(r,e)&o(t)}function o(t){if(t.classList)t.classList.remove(n.name);else if(hasClass(t,n.name)){var e=new RegExp("(^|\\s)?"+n.name+"(\\s|$)","g");t.className=t.className.replace(e," ").trim()}}if(!n.name)throw"Stik: Behavior name is missing";if(-1!==n.name.indexOf(" "))throw"Stik: '"+n.name+"' is not a valid Behavior name. Please replace empty spaces with dashes ('-')";if(!n.executionUnit)throw"Stik: Behavior needs a function to use as its execution unit";var r="data-behaviors";return n.bind=function(e){for(var o=n.findTemplates(),r=o.length;r--;)t(o[r]).context.load(n.executionUnit,e),i(o[r]);return o.length>0},n.bindWithTemplate=t,n.findTemplates=e,n},window.stik.createBoundary=function(n){if(-1!==n.as.indexOf(" "))throw"Stik: '"+n.as+"' is not a valid Boundary name. Please replace empty spaces with dashes ('-')";if(!n.to)throw"Stik: Boundary needs an object or function as 'to'";var t={};return t.to=window.stik.injectable({module:n.to,instantiable:n.instantiable,resolvable:n.resolvable,cache:n.cache}),t.name=n.as,t},window.stik.injector=function(n){function t(){var t,i,o;return t=/^function\s*[^\(]*\(\s*([^\)]*)\)/m,i=n.executionUnit.toString(),o=i.match(t)[1].split(","),e(o)}function e(n){var t=[];return n.forEach(function(n){t.push(n.trim())}),t}function i(t){var e,i;if(i=[],1===t.length&&""===t[0])return[];for(var o=0;o<t.length;o++){if(!(e=n.modules[t[o]]))throw"Stik could not find this module ("+t[o]+")";i.push(e.resolve(n.modules))}return i}if(!n.executionUnit)throw"Stik: Injector needs a function to use as its execution unit";return n.resolveDependencies=function(){var n=t();return i(n)},n},window.stik.manager=function(){function n(n){var t=window.stik.createController({name:n});return a[n]=t,t}function t(n){return!!r[n]}function e(n,t){return window.stik.createBehavior(n,t)}function i(n){var t,e={};for(t in n)e[t]=n[t].to;for(t in c.all)e[t]=c.all[t].to;return e}function o(n){var t=i(c.controller);n.bind(t)}var r={},a={},c={all:{},controller:{},behavior:{}},u={};return u.addControllerWithAction=function(t,e,o){var r=n(t),a=r.action(e,o);return a.bind(i(c.controller)),r},u.addController=function(t,e){var i=n(t);return e.call({},i),o(i),i},u.addBehavior=function(n,i){if(t(n))throw"Stik: Another behavior already exist with name '"+n+"'";var o=e({name:n,executionUnit:i});return r[n]=o,u.applyBehavior(o),o},u.addBoundary=function(n){var t;if(n.from=n.from||"all",-1===["all","controller","behavior"].indexOf(n.from))throw"Stik: Invalid boundary 'from' specified. Please use 'controller', 'behavior', 'all' or leave it blank to default to 'all'";return t=window.stik.createBoundary(n),c[n.from][n.as]=t,t},u.applyBehaviors=function(){var n,t=!1;for(n in r)u.applyBehavior(r[n])&&(t=!0);return t},u.applyBehavior=function(n){var t=i(c.behavior);return n.bind(t)},u.bindActionWithTemplate=function(n,t,e){var o,r=i(c.controller);return o=a[n].actions[t].bindWithTemplate(e,r),o.modules=r,o},u.bindBehaviorWithTemplate=function(n,t){var e,o=i(c.behavior);return e=r[n].bindWithTemplate(t,o),e.modules=o,e},u.bindActions=function(){var n,t=i(c.controller),e=!1;for(n in a)a[n].bind(t)&&(e=!0);return e},u.getBoundary=function(n){var t,e;for(t in c)for(e in c[t])if(e===n)return c[t][e]},u.boundariesFor=function(n){return i(c[n])},u.$reset=function(){a={},r={}},u},window.stik.$$manager=window.stik.manager(),window.stik.controller=function(n,t,e){return"string"==typeof t?window.stik.$$manager.addControllerWithAction(n,t,e):window.stik.$$manager.addController(n,t)},window.stik.behavior=function(n,t){return window.stik.$$manager.addBehavior(n,t)},window.stik.lazyBind=window.stik.bindLazy=function(){if(!window.stik.$$manager.bindActions()&!window.stik.$$manager.applyBehaviors())throw"Stik: Nothing new to bind!"},window.stik.boundary=function(n){return window.stik.$$manager.addBoundary(n)};